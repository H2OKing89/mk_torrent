[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mk-torrent"
version = "1.0.0"
description = "A comprehensive torrent creation and upload tool"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "H2OKing89", email = "h2oking89@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.8"
dependencies = [
    "typer>=0.17.0",
    "rich>=14.1.0",
    "prompt_toolkit>=3.0.43",
    "tqdm>=4.66.1",
    "sqlalchemy>=2.0.25",
    "requests>=2.32.0",
    "python-dateutil>=2.8.2",
    "mutagen>=1.47.0",
    "nh3>=0.3.0",
    "beautifulsoup4>=4.13.0",
    "pillow>=11.0.0",
    "musicbrainzngs>=0.7.1",
    "qbittorrent-api>=2025.7.0",
    "cryptography>=45.0.0",
    "keyring>=24.0.0",
    "bcrypt>=4.1.0",
    "bencode.py>=4.0.0",
    "urllib3>=2.0.0",
    "psutil>=7.0.0",
    # Template system essentials
    "pydantic>=2.8",
    "Jinja2>=3.1",
]

[project.optional-dependencies]
# Core packages - IMPLEMENTED ✅
core = [
    "nh3>=0.3",
    "beautifulsoup4>=4.13",
    "mutagen>=1.47",
    "Pillow>=11.0",
    "python-slugify>=8.0",
    "pathvalidate>=3.2",
    "pymediainfo>=6.1",
    "regex>=2024.5",
    "isbnlib>=3.10",
    "pycountry>=24.6",
    "rapidfuzz>=3.9",
]

# Networking & caching - PARTIALLY IMPLEMENTED ✅
net = [
    "tenacity>=8.5",           # ✅ IMPLEMENTED
    "requests-cache>=1.2",     # ✅ IMPLEMENTED
    "diskcache>=5.6",          # ✅ IMPLEMENTED
    "xxhash>=3.4",             # ✅ IMPLEMENTED
    # Future: httpx, aiolimiter, respx
]

# Data modeling & validation - IMPLEMENTED ✅
strict = [
    "pydantic>=2.8",           # ✅ IMPLEMENTED
    "pydantic-settings>=2.4",  # ✅ IMPLEMENTED
    "orjson>=3.10",            # ✅ IMPLEMENTED
    "fastjsonschema>=2.20",    # ✅ IMPLEMENTED
]

# Template system - IMPLEMENTED ✅ (NEW)
templates = [
    "Jinja2>=3.1",             # ✅ IMPLEMENTED
    "bbcode>=1.1",             # ✅ IMPLEMENTED
]

# CLI & UX - IMPLEMENTED ✅
cli = [
    "rich>=14.1",              # ✅ IMPLEMENTED
    "rich-click>=1.8",         # ✅ IMPLEMENTED
    "typer>=0.17",             # ✅ IMPLEMENTED
    "prompt_toolkit>=3.0.43",  # ✅ IMPLEMENTED
    "tqdm>=4.66.1",            # ✅ IMPLEMENTED
]

# Testing - IMPLEMENTED ✅
test = [
    "pytest>=8.0",            # ✅ IMPLEMENTED
    "freezegun>=1.5",          # ✅ IMPLEMENTED
    "pytest-snapshot>=0.9",   # ✅ IMPLEMENTED
    "codespell>=2.3",          # ✅ IMPLEMENTED
    "bandit>=1.7",             # ✅ IMPLEMENTED
    # Future: pytest-cov, pytest-mock, hypothesis, respx
]

# Development tools - IMPLEMENTED ✅
dev = [
    "black>=24.0",             # ✅ IMPLEMENTED
    "ruff>=0.1.9",             # ✅ IMPLEMENTED
    "pre-commit>=3.6",         # ✅ IMPLEMENTED
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "pytest-html>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
]

[project.scripts]
mk-torrent = "mk_torrent.cli:main"

[project.urls]
"Homepage" = "https://github.com/H2OKing89/mk_torrent"
"Bug Reports" = "https://github.com/H2OKing89/mk_torrent/issues"
"Source" = "https://github.com/H2OKing89/mk_torrent"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--html=test_results/report.html",
    "--self-contained-html",
    "--junitxml=test_results/junit.xml",
    "--cov=src/mk_torrent",
    "--cov-report=html:test_results/coverage_html",
    "--cov-report=xml:test_results/coverage.xml",
    "--cov-report=term-missing",
    "-m", "not network"  # Skip network tests by default
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "metadata: marks tests related to metadata processing",
    "templates: marks tests related to template system",
    "health: marks tests related to health checks",
    "asyncio: marks tests as async tests",
    "network: marks tests that require internet connection (skipped in CI by default)"
]
# Configure asyncio default fixture loop scope to avoid deprecation warning
asyncio_default_fixture_loop_scope = "function"
# Skip network tests in CI by default, run them manually with --network
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::pytest.PytestDeprecationWarning"
]

[tool.coverage.run]
source = ["src/mk_torrent"]
omit = [
    "tests/*",
    "*/test_*",
    "src/mk_torrent/__main__.py",
    "*/venv/*",
    "*/__pycache__/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

[tool.bandit]
exclude_dirs = ["tests", "archive", "htmlcov", "test_results", "scripts"]
# Security exclusions for our legitimate use cases:
# B101: Skip assert_used (we use pytest assertions)
# B108: Skip hardcoded_tmp_directory (we use /tmp for testing)
# B404: Skip subprocess import (we need it for Docker/ffprobe)
# B603: Skip subprocess_without_shell_equals_true (we validate inputs)
# B607: Skip start_process_with_partial_path (we control the executables)
# B324: Skip hashlib SHA1 (torrent spec requires SHA1)
# B107: Skip hardcoded_password_default (these are qBittorrent defaults)
# B110: Skip try_except_pass (legitimate cleanup code)
# B112: Skip try_except_continue (legitimate error handling)
skips = ["B101", "B108", "B404", "B603", "B607", "B324", "B107", "B110", "B112"]
severity = "medium"
