[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mk-torrent"
version = "1.0.0"
description = "A comprehensive torrent creation and upload tool"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "H2OKing89", email = "h2oking89@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.8"
dependencies = [
    "typer>=0.17.0",
    "rich>=14.1.0",
    "prompt_toolkit>=3.0.43",
    "tqdm>=4.66.1",
    "sqlalchemy>=2.0.25",
    "requests>=2.32.0",
    "python-dateutil>=2.8.2",
    "mutagen>=1.47.0",
    "nh3>=0.3.0",
    "beautifulsoup4>=4.13.0",
    "pillow>=11.0.0",
    "musicbrainzngs>=0.7.1",
    "qbittorrent-api>=2025.7.0",
    "cryptography>=45.0.0",
    "keyring>=24.0.0",
    "bcrypt>=4.1.0",
    "bencode.py>=4.0.0",
    "urllib3>=2.0.0",
    "psutil>=7.0.0",
]

[project.optional-dependencies]
# Metadata core dependencies - foundation packages for new metadata system
core = [
    "nh3>=0.2",
    "beautifulsoup4>=4.12",
    "mutagen>=1.47",
    "Pillow>=10.0",
    "python-slugify>=8.0",
    "Unidecode>=1.3",
    "cachetools>=5.3",
]

# Networking and API dependencies
net = [
    "httpx>=0.27",
    "tenacity>=9.0",
    "aiolimiter>=1.1",
]

# Strict validation and configuration
strict = [
    "pydantic>=2.7",
    "pydantic-settings>=2.4",
    "orjson>=3.10",
]

# CLI and user experience
cli = [
    "rich>=13.7",
]

# Testing dependencies
test = [
    "pytest>=8.0",
    "pytest-cov>=5.0",
    "pytest-mock>=3.14",
    "freezegun>=1.5",
    "hypothesis>=6.100",
    "respx>=0.21",
]

# Development dependencies
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "pytest-html>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
]

[project.scripts]
mk-torrent = "mk_torrent.cli:main"

[project.urls]
"Homepage" = "https://github.com/H2OKing89/mk_torrent"
"Bug Reports" = "https://github.com/H2OKing89/mk_torrent/issues"
"Source" = "https://github.com/H2OKing89/mk_torrent"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--html=test_results/report.html",
    "--self-contained-html",
    "--junitxml=test_results/junit.xml",
    "--cov=src/mk_torrent",
    "--cov-report=html:test_results/coverage_html",
    "--cov-report=xml:test_results/coverage.xml",
    "--cov-report=term-missing"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "metadata: marks tests related to metadata processing",
    "health: marks tests related to health checks",
    "asyncio: marks tests as async tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["src/mk_torrent"]
omit = [
    "tests/*",
    "*/test_*",
    "src/mk_torrent/__main__.py",
    "*/venv/*",
    "*/__pycache__/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
